apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: $NAME
  namespace: service-release-manager
  labels:
    app: $NAME
    commit: $VERSION
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $NAME
      commit: $VERSION
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: $NAME
        commit: $VERSION
    spec:
      restartPolicy: Always
      containers:
        - name: "$NAME"
          image: "registry.k3s.devnico.cloud/service-release-manager:latest"
          imagePullPolicy: Always
          resources: {}
          env:
            - name: ASPNETCORE_URLS
              value: "http://*:8090"
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
          ports:
            - containerPort: 8090
          volumeMounts:
            - name: appvolume
              mountPath: "/app/appsettings.Production.json"
              subPath: "appsettings.Production.json"
      volumes:
        - name: appvolume
          configMap:
            name: appsettings-$ENVIRONMENT
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: $NAME
  name: $NAME
  namespace: "service-release-manager"
spec:
  ports:
    - port: 8090
      protocol: TCP
      targetPort: 8090
  selector:
    app: $NAME
---
apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  name: $NAME
  namespace: "service-release-manager"
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: api.dev.srm.devnico.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: $NAME
                port:
                  number: 8090
  tls:
    - hosts:
        - api.dev.srm.devnico.cloud
